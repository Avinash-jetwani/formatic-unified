name: Setup Let's Encrypt SSL

on:
  workflow_dispatch:

jobs:
  setup-ssl:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Let's Encrypt SSL
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e
          
          echo "=== Testing DNS resolution ==="
          dig +short datizmo.com
          dig +short www.datizmo.com
          
          echo "=== Installing certbot if needed ==="
          sudo yum update -y
          sudo yum install -y epel-release
          sudo yum install -y certbot
          
          echo "=== Stopping nginx for standalone mode ==="
          sudo systemctl stop nginx
          
          echo "=== Generating Let's Encrypt certificate ==="
          sudo certbot certonly \
            --standalone \
            --non-interactive \
            --agree-tos \
            --email admin@datizmo.com \
            -d datizmo.com \
            -d www.datizmo.com \
            --force-renewal
          
          echo "=== Updating nginx configuration ==="
          sudo tee /etc/nginx/conf.d/datizmo.conf << 'EOF'
          server {
              listen 80;
              server_name datizmo.com www.datizmo.com;
              return 301 https://$server_name$request_uri;
          }
          
          server {
              listen 443 ssl;
              server_name datizmo.com www.datizmo.com;
              
              ssl_certificate /etc/letsencrypt/live/datizmo.com/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/datizmo.com/privkey.pem;
              
              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers HIGH:!aNULL:!MD5;
              ssl_prefer_server_ciphers on;
              
              add_header Strict-Transport-Security "max-age=63072000" always;
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-XSS-Protection "1; mode=block" always;
              add_header X-Content-Type-Options "nosniff" always;
              
              location /api/ {
                  proxy_pass http://127.0.0.1:3001;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_cache_bypass $http_upgrade;
              }
              
              location /_next/static {
                  proxy_pass http://127.0.0.1:3000;
                  expires 1y;
                  add_header Cache-Control "public, immutable";
              }
              
              location ~* \.(ico|css|js|gif|jpeg|jpg|png|svg|woff|woff2|ttf|eot)$ {
                  proxy_pass http://127.0.0.1:3000;
                  expires 1y;
                  add_header Cache-Control "public, immutable";
              }
              
              location / {
                  proxy_pass http://127.0.0.1:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_cache_bypass $http_upgrade;
              }
          }
          EOF
          
          echo "=== Testing nginx config ==="
          sudo nginx -t
          
          echo "=== Starting nginx ==="
          sudo systemctl start nginx
          sudo systemctl enable nginx
          
          echo "=== Setting up auto-renewal ==="
          echo "0 12 * * * /usr/bin/certbot renew --quiet --post-hook 'systemctl reload nginx'" | sudo crontab -
          
          echo "=== Testing HTTPS ==="
          sleep 5
          curl -I https://datizmo.com
          
          echo "=== SSL setup completed! ===" 