name: Diagnose and Fix

on:
  workflow_dispatch:

jobs:
  diagnose:
    runs-on: ubuntu-latest
    
    steps:
    - name: Comprehensive Diagnosis and Fix
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "=== COMPREHENSIVE DIAGNOSIS ==="
          
          # Source NVM
          export NVM_DIR="/home/ec2-user/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
          
          echo "=== 1. Check PM2 Status ==="
          pm2 status
          
          echo "=== 2. Check if ports are listening ==="
          netstat -tlnp | grep -E ':300[01]'
          
          echo "=== 3. Check nginx processes ==="
          ps aux | grep nginx
          
          echo "=== 4. Check nginx config ==="
          sudo nginx -t
          
          echo "=== 5. Check logs ==="
          echo "PM2 logs (last 20 lines):"
          pm2 logs --lines 20 || echo "No PM2 logs"
          
          echo "Nginx error logs:"
          sudo tail -20 /var/log/nginx/error.log 2>/dev/null || echo "No nginx error logs"
          
          echo "=== 6. Test direct service connections ==="
          curl -s -I http://localhost:3000 | head -1 || echo "Frontend (3000) not responding"
          curl -s -I http://localhost:3001 | head -1 || echo "Backend (3001) not responding"
          
          echo "=== 7. ATTEMPTING FIXES ==="
          
          echo "Stopping all PM2 processes..."
          pm2 stop all || echo "No processes to stop"
          pm2 delete all || echo "No processes to delete"
          
          echo "Checking if ecosystem file exists..."
          cd /home/ec2-user/formatic-unified
          if [ -f "ecosystem.config.js" ]; then
            echo "Starting with ecosystem file..."
            pm2 start ecosystem.config.js --env production
          else
            echo "Starting services manually..."
            cd backend
            if [ -f "dist/main.js" ]; then
              pm2 start dist/main.js --name backend
            elif [ -f "dist/src/main.js" ]; then
              pm2 start dist/src/main.js --name backend
            else
              echo "Backend main.js not found!"
              ls -la dist/
            fi
            
            cd ../frontend
            pm2 start npm --name frontend -- start
          fi
          
          echo "Waiting 15 seconds for services to start..."
          sleep 15
          
          echo "=== 8. FINAL STATUS CHECK ==="
          pm2 status
          
          echo "Service tests:"
          curl -s -I http://localhost:3000 | head -1 || echo "Frontend still not responding"
          curl -s -I http://localhost:3001 | head -1 || echo "Backend still not responding"
          
          echo "External test:"
          curl -s -I http://datizmo.com | head -1 || echo "External still not working"
          
          echo "=== DIAGNOSIS COMPLETE ===" 